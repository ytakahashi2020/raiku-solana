export type Locale = "en" | "ja"

export const translations = {
  en: {
    // Common
    loading: "Loading...",
    error: "Error",
    retry: "Retry",
    noData: "No data available",

    // Header
    productName: "Raiku Network Monitor",
    network: "Network",
    help: "Help",

    // Networks
    dev: "Development",
    prod: "Production",
    mock: "Mock",

    // Navigation
    home: "Home",
    simulator: "Transaction Simulator",
    liveTransactions: "Live Transactions",
    analytics: "Analytics",
    certificate: "Certificate",

    // Home
    predictabilityScore: "Predictability Score",
    estimatedSuccess: "Estimated success probability within {window} window",
    landingRate: "Landing Rate @ {window}",
    medianPreconfirm: "Median Pre-confirmation",
    suggestedFee: "Suggested Fee @ 99%",
    goToSimulator: "Go to Simulator",
    generateCertificate: "Generate Certificate",
    noRecentActivity: "No recent activity",

    // Congestion
    lowCongestion: "Low Congestion",
    mediumCongestion: "Medium Congestion",
    highCongestion: "High Congestion",

    // Simulator
    mode: "Mode",
    targetWindow: "Target Completion Window",
    targetSuccess: "Target Success Probability",
    transactionCount: "Transaction Count",
    budgetCap: "Budget Cap",
    runSimulation: "Run Simulation",
    sendSampleTx: "Send Sample TX",
    setParameters: "Set parameters to simulate",
    projectedSuccess: "Projected Success",
    projectedPreconfirm: "Projected Pre-confirmation",
    riskScore: "Risk Score",
    simulatorDescription: "Test transaction parameters and predict outcomes before submitting to the network",
    transactionConfig: "Transaction Configuration",
    configureSimulation: "Configure your simulation parameters",
    transactionSize: "Transaction Size",
    typicalRange: "Typical range",
    priorityLevel: "Priority Level",
    high: "High",
    medium: "Medium",
    low: "Low",
    higherPriority: "Higher priority increases success rate but costs more",
    estimatedFee: "Estimated Fee",
    simulating: "Simulating...",
    reset: "Reset",
    simulationResults: "Simulation Results",
    predictedOutcome: "Predicted outcome based on current network conditions",
    runSimulationPrompt: "Configure parameters and run a simulation to see predicted results",
    transactionSuccess: "Transaction Success",
    likelyToLand: "Transaction is likely to land successfully",
    transactionFailed: "Transaction Risk",
    mayNotLand: "Transaction may not land under current conditions",
    preconfirmTime: "Preconfirm Time",
    finalizeTime: "Finalize Time",
    actualFee: "Actual Fee",
    recommendation: "Recommendation",
    goodConditions: "Current conditions are favorable for this transaction. Proceed with confidence.",
    considerIncreasing: "Consider increasing priority or waiting for better network conditions.",

    // Live Transactions
    liveTransactionsDescription: "Monitor transactions in real-time as they flow through the network",
    recentTransactions: "Recent Transactions",
    showing: "Showing",
    transactions: "transactions",
    noTransactions: "No transactions to display",
    pending: "Pending",
    preconfirmed: "Preconfirmed",
    finalized: "Finalized",
    failed: "Failed",
    total: "Total",
    success: "Success",
    all: "All",
    pause: "Pause",
    resume: "Resume",
    size: "Size",
    fee: "Fee",
    preconfirm: "Preconfirm",
    finalize: "Finalize",
    sol: "SOL",

    // Analytics
    analyticsDescription: "Historical metrics and performance trends",
    avgSuccessRate: "Avg Success Rate",
    avgPreconfirm: "Avg Preconfirm",
    avgFee: "Avg Fee",
    totalTransactions: "Total Transactions",
    fromLastPeriod: "from last period",
    twentyFourHours: "24 Hours",
    sevenDays: "7 Days",
    thirtyDays: "30 Days",
    successRate: "Success Rate",
    latency: "Latency",
    fees: "Fees",
    predictability: "Predictability",
    transactionSuccessOverTime: "Transaction success rate over time",
    failureRate: "Failure Rate",
    latencyMetrics: "Latency Metrics",
    preconfirmFinalizeLatency: "Preconfirm and finalize latency over time",
    feeAnalysis: "Fee Analysis",
    averageP95Fees: "Average and P95 fees over time",
    p95Fee: "P95 Fee",
    predictabilityTrend: "Predictability Trend",
    networkPredictabilityOverTime: "Network predictability score over time",

    // Certificate
    certificateDescription: "Generate performance certificates and detailed reports",
    certificateConfig: "Certificate Configuration",
    enterProjectDetails: "Enter your project details",
    projectName: "Project Name",
    enterProjectName: "Enter project name",
    description: "Description",
    enterDescription: "Enter project description (optional)",
    reportPeriod: "Report Period",
    last7Days: "Last 7 Days",
    last30Days: "Last 30 Days",
    custom: "Custom",
    generating: "Generating...",
    certificatePreview: "Certificate Preview",
    previewBeforeDownload: "Preview your certificate before downloading",
    generateToPreview: "Generate a certificate to see the preview",
    performanceCertificate: "Performance Certificate",
    raikuNetworkMonitor: "Raiku Network Monitor",
    avgFinalize: "Avg Finalize",
    excellent: "Excellent",
    downloadPDF: "Download PDF",
    downloadStarted: "Download started",
    detailedReports: "Detailed Reports",
    detailedReportsDesc: "Comprehensive performance metrics and transaction analytics",
    verifiedMetrics: "Verified Metrics",
    verifiedMetricsDesc: "All data is verified and sourced directly from the network",
    instantGeneration: "Instant Generation",
    instantGenerationDesc: "Generate certificates and reports in seconds",
  },
  ja: {
    // Common
    loading: "読み込み中...",
    error: "エラー",
    retry: "再試行",
    noData: "データがありません",

    // Header
    productName: "Raikuネットワークモニター",
    network: "ネットワーク",
    help: "ヘルプ",

    // Networks
    dev: "開発",
    prod: "本番",
    mock: "モック",

    // Navigation
    home: "ホーム",
    simulator: "トランザクションシミュレーター",
    liveTransactions: "ライブトランザクション",
    analytics: "分析",
    certificate: "証明書",

    // Home
    predictabilityScore: "予測可能性スコア",
    estimatedSuccess: "{window}ウィンドウ内での推定成功確率",
    landingRate: "着地率 @ {window}",
    medianPreconfirm: "中央値事前確約",
    suggestedFee: "推奨手数料 @ 99%",
    goToSimulator: "シミュレーターへ",
    generateCertificate: "証明書を生成",
    noRecentActivity: "最近のアクティビティなし",

    // Congestion
    lowCongestion: "低混雑",
    mediumCongestion: "中混雑",
    highCongestion: "高混雑",

    // Simulator
    mode: "モード",
    targetWindow: "目標完了ウィンドウ",
    targetSuccess: "目標成功確率",
    transactionCount: "トランザクション数",
    budgetCap: "予算上限",
    runSimulation: "シミュレーション実行",
    sendSampleTx: "サンプルTX送信",
    setParameters: "パラメータを設定してシミュレーション",
    projectedSuccess: "予測成功率",
    projectedPreconfirm: "予測事前確認",
    riskScore: "リスクスコア",
    simulatorDescription: "ネットワークに送信する前にトランザクションパラメータをテストし、結果を予測します",
    transactionConfig: "トランザクション設定",
    configureSimulation: "シミュレーションパラメータを設定",
    transactionSize: "トランザクションサイズ",
    typicalRange: "一般的な範囲",
    priorityLevel: "優先度レベル",
    high: "高",
    medium: "中",
    low: "低",
    higherPriority: "優先度を上げると成功率が上がりますが、コストが増加します",
    estimatedFee: "推定手数料",
    simulating: "シミュレーション中...",
    reset: "リセット",
    simulationResults: "シミュレーション結果",
    predictedOutcome: "現在のネットワーク状況に基づく予測結果",
    runSimulationPrompt: "パラメータを設定してシミュレーションを実行し、予測結果を確認してください",
    transactionSuccess: "トランザクション成功",
    likelyToLand: "トランザクションは正常に着地する可能性が高いです",
    transactionFailed: "トランザクションリスク",
    mayNotLand: "現在の状況ではトランザクションが着地しない可能性があります",
    preconfirmTime: "事前確認時間",
    finalizeTime: "確定時間",
    actualFee: "実際の手数料",
    recommendation: "推奨事項",
    goodConditions: "現在の状況はこのトランザクションに適しています。自信を持って進めてください。",
    considerIncreasing: "優先度を上げるか、より良いネットワーク状況を待つことを検討してください。",

    // Live Transactions
    liveTransactionsDescription: "ネットワークを流れるトランザクションをリアルタイムで監視",
    recentTransactions: "最近のトランザクション",
    showing: "表示中",
    transactions: "トランザクション",
    noTransactions: "表示するトランザクションがありません",
    pending: "保留中",
    preconfirmed: "事前確認済み",
    finalized: "確定済み",
    failed: "失敗",
    total: "合計",
    success: "成功",
    all: "すべて",
    pause: "一時停止",
    resume: "再開",
    size: "サイズ",
    fee: "手数料",
    preconfirm: "事前確認",
    finalize: "確定",
    sol: "SOL",

    // Analytics
    analyticsDescription: "履歴メトリクスとパフォーマンストレンド",
    avgSuccessRate: "平均成功率",
    avgPreconfirm: "平均事前確認",
    avgFee: "平均手数料",
    totalTransactions: "総トランザクション数",
    fromLastPeriod: "前期間比",
    "24hours": "24時間",
    "7days": "7日間",
    "30days": "30日間",
    successRate: "成功率",
    latency: "レイテンシ",
    fees: "手数料",
    predictability: "予測可能性",
    transactionSuccessOverTime: "時間経過によるトランザクション成功率",
    failureRate: "失敗率",
    latencyMetrics: "レイテンシメトリクス",
    preconfirmFinalizeLatency: "時間経過による事前確認と確定のレイテンシ",
    feeAnalysis: "手数料分析",
    averageP95Fees: "時間経過による平均およびP95手数料",
    p95Fee: "P95手数料",
    predictabilityTrend: "予測可能性トレンド",
    networkPredictabilityOverTime: "時間経過によるネットワーク予測可能性スコア",

    // Certificate
    certificateDescription: "パフォーマンス証明書と詳細レポートを生成",
    certificateConfig: "証明書設定",
    enterProjectDetails: "プロジェクトの詳細を入力",
    projectName: "プロジェクト名",
    enterProjectName: "プロジェクト名を入力",
    description: "説明",
    enterDescription: "プロジェクトの説明を入力（オプション）",
    reportPeriod: "レポート期間",
    last7Days: "過去7日間",
    last30Days: "過去30日間",
    custom: "カスタム",
    generating: "生成中...",
    certificatePreview: "証明書プレビュー",
    previewBeforeDownload: "ダウンロード前に証明書をプレビュー",
    generateToPreview: "証明書を生成してプレビューを表示",
    performanceCertificate: "パフォーマンス証明書",
    raikuNetworkMonitor: "Raikuネットワークモニター",
    avgFinalize: "平均確定",
    excellent: "優秀",
    downloadPDF: "PDFをダウンロード",
    downloadStarted: "ダウンロードを開始しました",
    detailedReports: "詳細レポート",
    detailedReportsDesc: "包括的なパフォーマンスメトリクスとトランザクション分析",
    verifiedMetrics: "検証済みメトリクス",
    verifiedMetricsDesc: "すべてのデータはネットワークから直接検証および取得されます",
    instantGeneration: "即時生成",
    instantGenerationDesc: "数秒で証明書とレポートを生成",
  },
}

export function t(locale: Locale, key: string, params?: Record<string, string>): string {
  let text = translations[locale][key as keyof (typeof translations)["en"]] || key

  if (params) {
    Object.entries(params).forEach(([param, value]) => {
      text = text.replace(`{${param}}`, value)
    })
  }

  return text
}
